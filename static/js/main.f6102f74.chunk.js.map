{"version":3,"sources":["components/AutocompleteOptionsInput.jsx","components/AutocompleteSearchInput.jsx","components/AppBarMenu.jsx","components/AccountMenu.jsx","components/PrimarySearchAppBar.jsx","components/MainProjectsList.jsx","store/projectsList/actions.js","pages/Projects.page.jsx","pages/Project.page.jsx","pages/Archive.page.jsx","pages/Drafts.page.jsx","pages/AddProject.page.jsx","pages/EditProject.page.jsx","theme.ts","App.tsx","store/projectsList/reducer.js","store/reducers.js","store/index.js","index.tsx"],"names":["AutocompleteOptionsInput","state","useSelector","projectsList","dispatch","useDispatch","searchInputOptions","label","id","Autocomplete","disablePortal","options","value","searchOption","isOptionEqualToValue","option","size","onChange","event","type","payload","sx","width","renderInput","params","TextField","AutocompleteSearchInput","props","location","useLocation","nameSearchQuals","rowsToFilter","pathname","filter","project","cardStatus","map","row","rowsToFilterSet","Set","forEach","push","placeholder","searchText","onInputChange","target","freeSolo","PositionedMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","currentTarget","edge","color","aria-label","mr","Menu","aria-labelledby","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","style","textDecoration","to","AccountMenu","Box","display","alignItems","textAlign","Tooltip","title","ml","PaperProps","elevation","overflow","mt","height","content","position","top","right","bgcolor","transform","zIndex","ListItemIcon","fontSize","Search","styled","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","transition","marginRight","spacing","marginLeft","breakpoints","up","padding","pointerEvents","justifyContent","InputBase","paddingLeft","transitions","create","PrimarySearchAppBar","flexGrow","AppBar","Toolbar","includes","Button","variant","m","descendingComparator","a","b","orderBy","Date","parse","getComparator","order","initialHeadCells","disablePadding","achiveHeadCells","cell","headCells","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","component","visuallyHidden","EnhancedTableToolbar","pl","sm","pr","xs","Typography","flex","MainProjectsList","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","initialRows","newRowsIds","choosedRow","toLowerCase","rows","emptyRows","Math","max","length","Paper","mb","TableContainer","Table","minWidth","rowCount","TableBody","slice","sort","index","labelId","hover","tabIndex","scope","projectName","customer","functionalDirection","subjectArea","requestAuthor","maxWidth","completionDate","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","ProjectsPage","Fragment","ProjectPage","ArchivePage","archiveProjects","DraftPage","draftsProjects","AddProjectPage","EditProjectPage","createTheme","primary","main","secondary","typography","fontFamily","join","components","MuiButton","variants","textTransform","ruRU","responsiveFontSizes","App","ThemeProvider","path","element","createData","initialState","rooteReducer","combineReducers","action","STORE","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f6102f74.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// TODO: сделать enum для searchInputOptions\r\n\r\nconst AutocompleteOptionsInput = () => {\r\n  const state = useSelector((state) => state.projectsList);\r\n  const dispatch = useDispatch();\r\n  const searchInputOptions = [\r\n    { label: \"Наименование проекта\", id: \"0\" },\r\n    { label: \"Заказчик\", id: \"1\" },\r\n    { label: \"Функциональное направление\", id: \"2\" },\r\n    { label: \"Предметная область\", id: \"3\" },\r\n    { label: \"Автор заявки\", id: \"4\" },\r\n    { label: \"Статус карточки\", id: \"5\" },\r\n    { label: \"Срок завершения проекта\", id: \"6\" },\r\n  ];\r\n\r\n  return (\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"search-input-options\"\r\n      options={searchInputOptions}\r\n      value={searchInputOptions[state.searchOption]}\r\n      isOptionEqualToValue={(option, value) => option.id === value.id}\r\n      size=\"small\"\r\n      onChange={(event, value) => {\r\n        dispatch({\r\n          type: \"SET_SEARCH_OPTION\",\r\n          payload: value ? value.id : state.searchOption,\r\n        });\r\n        dispatch({\r\n          type: \"SET_SEARCHFIELD_TEXT\",\r\n          payload: \"\",\r\n        });\r\n      }}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Поиск по\" />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutocompleteOptionsInput;\r\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AutocompleteSearchInput = (props) => {\n  const state = useSelector((state) => state.projectsList);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const nameSearchQuals = [\n    \"projectName\",\n    \"customer\",\n    \"functionalDirection\",\n    \"subjectArea\",\n    \"requestAuthor\",\n    \"cardStatus\",\n    \"completionDate\",\n  ];\n\n  const initialRows =\n    location.pathname === \"/archive\"\n      ? state.projectsList.filter(\n          (project) => project.cardStatus === \"В Архиве\"\n        )\n      : state.projectsList;\n\n  const rowsToFilter = initialRows.map((row) => {\n    const choosedRow = nameSearchQuals[state.searchOption];\n    return row[choosedRow];\n  });\n\n  const rowsToFilterSet = new Set(rowsToFilter);\n\n  const searchInputOptions = [];\n\n  rowsToFilterSet.forEach((option) => {\n    searchInputOptions.push({ label: option });\n  });\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"autocomplete-search-input\"\n      placeholder=\"Search…\"\n      value={state.searchText}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n      onChange={(event, value) => {\n        dispatch({\n          type: \"SET_SEARCHFIELD_TEXT\",\n          payload: value ? (value.label ? value.label : \"\") : \"\",\n        });\n      }}\n      onInputChange={(event) => {\n        dispatch({\n          type: \"SET_SEARCHFIELD_TEXT\",\n          payload: event ? (event.target ? event.target.value : \"\") : \"\",\n        });\n      }}\n      freeSolo\n      options={searchInputOptions}\n      renderInput={(params) => <TextField {...params} label=\"Search...\" />}\n    />\n  );\n};\n\nexport default AutocompleteSearchInput;\n","import * as React from \"react\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PositionedMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        id=\"demo-positioned-button\"\r\n        aria-controls=\"demo-positioned-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n        size=\"large\"\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        sx={{ mr: 2 }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"demo-positioned-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n          <Link\r\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            to=\"/projects\"\r\n          >\r\n            Реестр проектов\r\n          </Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link\r\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            to=\"/archive\"\r\n          >\r\n            Архив проектов\r\n          </Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link\r\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            to=\"/drafts\"\r\n          >\r\n            Черновики\r\n          </Link>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PositionedMenu;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Logout from \"@mui/icons-material/Logout\";\r\n\r\nconst AccountMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>\r\n        <Tooltip title=\"Аккаунт\">\r\n          <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n            <PersonIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            overflow: \"visible\",\r\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n            mt: 1.5,\r\n            \"& .MuiAvatar-root\": {\r\n              width: 32,\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            \"&:before\": {\r\n              content: '\"\"',\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: \"background.paper\",\r\n              transform: \"translateY(-50%) rotate(45deg)\",\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <Logout fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport AutocompleteOptionsInput from \"./AutocompleteOptionsInput\";\r\nimport AutocompleteSearchInput from \"./AutocompleteSearchInput\";\r\nimport PositionedMenu from \"./AppBarMenu\";\r\nimport AccountMenu from \"./AccountMenu\";\r\n\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.55),\r\n  \"&:hover\": {\r\n    transition: \"0.1s\",\r\n    backgroundColor: alpha(theme.palette.common.white, 1),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"350px\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const location = useLocation();\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <PositionedMenu></PositionedMenu>\r\n          {!location.pathname.includes(\"/projects/\") &&\r\n          !location.pathname.includes(\"/add\") &&\r\n          !location.pathname.includes(\"/edit/\") ? (\r\n            <React.Fragment>\r\n              <Search>\r\n                <AutocompleteSearchInput />\r\n              </Search>\r\n              <AutocompleteOptionsInput />\r\n            </React.Fragment>\r\n          ) : (\r\n            <Link to=\"/projects\" style={{ textDecoration: \"none\" }}>\r\n              <Button color=\"secondary\" variant=\"contained\" sx={{ m: 1 }}>\r\n                Pеестр проектов\r\n              </Button>\r\n            </Link>\r\n          )}\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <Link to=\"/add\" style={{ textDecoration: \"none\" }}>\r\n              <Button color=\"secondary\" variant=\"contained\" sx={{ m: 1 }}>\r\n                Новая Запись\r\n              </Button>\r\n            </Link>\r\n            <Box sx={{ alignItems: \"center\", display: \"flex\", ml: 2 }}>\r\n              <AccountMenu />\r\n            </Box>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport ArchiveIcon from \"@mui/icons-material/Archive\";\r\nimport UnarchiveIcon from \"@mui/icons-material/Unarchive\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  projectsList__removeProject,\r\n  projectsList__moveProjectToArchive,\r\n  projectsList__moveProjectToActive,\r\n} from \"../store/projectsList/actions\";\r\n\r\n// TODO: Переписать в tsx, когда будет известен формат данных\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  // Сортировка по дате\r\n  if (Date.parse(a[orderBy]) && Date.parse(b[orderBy])) {\r\n    if (Date.parse(b[orderBy]) < Date.parse(a[orderBy])) {\r\n      return -1;\r\n    }\r\n    if (Date.parse(b[orderBy]) > Date.parse(a[orderBy])) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nconst initialHeadCells = [\r\n  {\r\n    id: \"projectName\",\r\n    disablePadding: true,\r\n    label: \"Наименование проекта\",\r\n  },\r\n  {\r\n    id: \"customer\",\r\n    disablePadding: false,\r\n    label: \"Заказчик\",\r\n  },\r\n  {\r\n    id: \"functionalDirection\",\r\n    disablePadding: false,\r\n    label: \"Функциональное направление\",\r\n  },\r\n  {\r\n    id: \"subjectArea\",\r\n    disablePadding: false,\r\n    label: \"Предметная область\",\r\n  },\r\n  {\r\n    id: \"requestAuthor\",\r\n    disablePadding: false,\r\n    label: \"Автор заявки\",\r\n  },\r\n  {\r\n    id: \"cardStatus\",\r\n    disablePadding: false,\r\n    label: \"Статус карточки\",\r\n  },\r\n  {\r\n    id: \"completionDate\",\r\n    disablePadding: false,\r\n    label: \"Завершение проекта\",\r\n  },\r\n];\r\n\r\nconst achiveHeadCells = initialHeadCells.filter(\r\n  (cell) => cell.id !== \"cardStatus\"\r\n);\r\n\r\nlet headCells = [];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"left\"\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell>Управление</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 1 },\r\n        pr: { xs: 1, sm: 1 },\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        {props.title}\r\n      </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst nameSearchQuals = [\r\n  \"projectName\",\r\n  \"customer\",\r\n  \"functionalDirection\",\r\n  \"subjectArea\",\r\n  \"requestAuthor\",\r\n  \"cardStatus\",\r\n  \"completionDate\",\r\n];\r\n\r\nconst MainProjectsList = (props) => {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"project-name\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const state = useSelector((state) => state.projectsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  if (location.pathname === \"/archive\") {\r\n    headCells = achiveHeadCells;\r\n  } else {\r\n    headCells = initialHeadCells;\r\n  }\r\n\r\n  const initialRows = props && props.state ? props.state : state.projectsList;\r\n\r\n  const rowsToFilter = initialRows.map((row) => {\r\n    const choosedRow = nameSearchQuals[state.searchOption];\r\n    return {\r\n      id: row.id,\r\n      choosedRow: row[choosedRow] && row[choosedRow].toLowerCase(),\r\n    };\r\n  });\r\n\r\n  const newRows = rowsToFilter.filter((row) => {\r\n    if (!row.choosedRow) return false;\r\n    return row.choosedRow.includes(state.searchText.toLowerCase());\r\n  });\r\n\r\n  const newRowsIds = newRows.map((row) => {\r\n    return row.id;\r\n  });\r\n\r\n  const rows = initialRows.filter((row) => {\r\n    return newRowsIds.includes(row.id);\r\n  });\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", mt: 5 }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2, pl: 1 }}>\r\n        <EnhancedTableToolbar title={props.title} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n          >\r\n            <EnhancedTableHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows\r\n                .slice()\r\n                .sort(getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <React.Fragment key={row.id}>\r\n                      <TableRow hover tabIndex={-1}>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          <Link\r\n                            to={`/projects/${row.id}`}\r\n                            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                          >\r\n                            {row.projectName}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.customer}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.functionalDirection}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.subjectArea}</TableCell>\r\n                        <TableCell align=\"left\">{row.requestAuthor}</TableCell>\r\n                        {!(location.pathname === \"/archive\") ? (\r\n                          <TableCell align=\"left\">\r\n                            <Typography\r\n                              sx={{\r\n                                maxWidth: 100,\r\n                                textAlign: \"center\",\r\n                                borderRadius: 2,\r\n                                backgroundColor:\r\n                                  (row.cardStatus === \"Активная\" && \"green\") ||\r\n                                  (row.cardStatus === \"В Архиве\" && \"orange\"),\r\n                              }}\r\n                            >\r\n                              {row.cardStatus}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        ) : null}\r\n                        <TableCell align=\"left\">{row.completionDate}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <Tooltip title=\"Поделиться\">\r\n                            <IconButton size=\"small\">\r\n                              <ShareIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          {row.cardStatus === \"Активная\" ? (\r\n                            <Link\r\n                              to={`/edit/${row.id}`}\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              <Tooltip title=\"Редактировать\">\r\n                                <IconButton size=\"small\">\r\n                                  <EditIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Link>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {row.cardStatus === \"Активная\" ? (\r\n                            <Tooltip title=\"В Архив\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                  dispatch(\r\n                                    projectsList__moveProjectToArchive(row.id)\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <ArchiveIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip title=\"Из Архива\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                  dispatch(\r\n                                    projectsList__moveProjectToActive(row.id)\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <UnarchiveIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          )}\r\n                          <Tooltip title=\"Удалить\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                dispatch(projectsList__removeProject(row.id));\r\n                              }}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 53 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainProjectsList;\r\n","/**\r\n * Записать Проекты в store\r\n * @param projectsList\r\n */\r\nexport const projectsList__setProjectsList = (projectsList) => ({\r\n  type: \"SET_PROJECTSLIST_DATA\",\r\n  payload: projectsList,\r\n});\r\n\r\n/**\r\n * Удалить Проект из store\r\n * @param id\r\n */\r\nexport const projectsList__removeProject = (id) => ({\r\n  type: \"REMOVE_PROJECT\",\r\n  payload: id,\r\n});\r\n\r\n/**\r\n * Отправить Проект в Архив\r\n * @param id\r\n */\r\nexport const projectsList__moveProjectToArchive = (id) => ({\r\n  type: \"MOVE_TO_ARCHIVE\",\r\n  payload: id,\r\n});\r\n\r\n/**\r\n * Достать Проект из Архива\r\n * @param id\r\n */\r\nexport const projectsList__moveProjectToActive = (id) => ({\r\n  type: \"MOVE_TO_ACTIVE\",\r\n  payload: id,\r\n});\r\n","import React from \"react\";\r\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\r\nimport MainProjectsList from \"../components/MainProjectsList\";\r\n\r\nconst ProjectsPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <PrimarySearchAppBar />\r\n      <MainProjectsList title={\"Реестр проектов\"} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n","import React from \"react\";\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\n\nconst ProjectPage = () => {\n  return (\n    <React.Fragment>\n      <PrimarySearchAppBar />\n      <div>Здесь будет карточка проекта</div>\n    </React.Fragment>\n  );\n};\n\nexport default ProjectPage;\n","import React from \"react\";\r\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\r\nimport MainProjectsList from \"../components/MainProjectsList\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ArchivePage = () => {\r\n  const state = useSelector((state) => state.projectsList);\r\n  const archiveProjects = state.projectsList.filter(\r\n    (project) => project.cardStatus === \"В Архиве\"\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PrimarySearchAppBar />\r\n      <MainProjectsList state={archiveProjects} title={\"Архив проектов\"} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArchivePage;\r\n","import React from \"react\";\r\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\r\nimport MainProjectsList from \"../components/MainProjectsList\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DraftPage = () => {\r\n  // TODO: Фильтрация по черновикам\r\n  const state = useSelector((state) => state.projectsList);\r\n  const draftsProjects = state.projectsList.filter(\r\n    (project) => project.cardStatus === \"\"\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PrimarySearchAppBar />\r\n      <MainProjectsList state={draftsProjects} title={\"Черновики\"} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DraftPage;\r\n","import React from \"react\";\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\n\nconst AddProjectPage = () => {\n  return (\n    <React.Fragment>\n      <PrimarySearchAppBar />\n      <div>Здесь будет форма карточки проекта</div>\n    </React.Fragment>\n  );\n};\n\nexport default AddProjectPage;\n","import React from \"react\";\nimport PrimarySearchAppBar from \"../components/PrimarySearchAppBar\";\n\nconst EditProjectPage = () => {\n  return (\n    <React.Fragment>\n      <PrimarySearchAppBar />\n      <div>Здесь будет форма редактирования карточки проекта</div>\n    </React.Fragment>\n  );\n};\n\nexport default EditProjectPage;\n","import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\r\nimport { ruRU } from \"@mui/material/locale\";\r\n\r\nlet theme = createTheme(\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#BEEBFF\",\r\n      },\r\n      //secondary: purple,\r\n\r\n      secondary: {\r\n        main: \"#ffff\",\r\n        //main: '#673ab7',\r\n        // #4ba0d7\r\n      },\r\n    },\r\n    shape: {\r\n      borderRadius: 8,\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Roboto\", \"sans-serif\"].join(\",\"),\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: \"contained\", color: \"secondary\" },\r\n            style: {\r\n              color: \"black\",\r\n              height: \"40px\",\r\n              filter: \"drop-shadow(0px 0px 3px rgba(0, 0, 0, 0.25))\",\r\n              textTransform: \"none\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#ffff\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  },\r\n  ruRU\r\n);\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import ThemeProvider from \"@mui/material/styles/ThemeProvider\";\r\nimport React from \"react\";\r\nimport ProjectsPage from \"./pages/Projects.page\";\r\nimport ProjectPage from \"./pages/Project.page\";\r\nimport ArchivePage from \"./pages/Archive.page\";\r\nimport DraftsPage from \"./pages/Drafts.page\";\r\nimport AddProjectPage from \"./pages/AddProject.page\";\r\nimport EditProjectPage from \"./pages/EditProject.page\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport theme from \"./theme\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Routes>\r\n        <Route path=\"archive\" element={<ArchivePage />} />\r\n        <Route path=\"projects\" element={<ProjectsPage />} />\r\n        <Route path=\"projects/:projectId\" element={<ProjectPage />} />\r\n        <Route path=\"drafts\" element={<DraftsPage />} />\r\n        <Route path=\"add\" element={<AddProjectPage />} />\r\n        <Route path=\"edit/:projectId\" element={<EditProjectPage />} />\r\n        <Route path=\"*\" element={<ProjectsPage />} />\r\n      </Routes>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","function createData(\r\n  id,\r\n  projectName,\r\n  customer,\r\n  functionalDirection,\r\n  subjectArea,\r\n  requestAuthor,\r\n  cardStatus,\r\n  completionDate\r\n) {\r\n  return {\r\n    id,\r\n    projectName,\r\n    customer,\r\n    functionalDirection,\r\n    subjectArea,\r\n    requestAuthor,\r\n    cardStatus,\r\n    completionDate,\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  projectsList: [\r\n    createData(\r\n      \"1\",\r\n      \"Цунтрализация ИТ-инфраструктуры\",\r\n      \"PONY EXPRESS\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ТРАНСПОРТ И ЛОГИСТИКА\",\r\n      \"ИВАНОВА И. И.\",\r\n      \"Активная\",\r\n      \"12-29-2022\"\r\n    ),\r\n    createData(\r\n      \"2\",\r\n      \"Rb ИТ-инфраструктуры\",\r\n      \"PONY EXPRESS\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ТРАНСПОРТ И ЛОГИСТИКА\",\r\n      \"ИВАНОВА И. И.\",\r\n      \"В Архиве\",\r\n      \"12-28-2021\"\r\n    ),\r\n    createData(\r\n      \"3\",\r\n      \"ИТ-инфраструктуры\",\r\n      \"PONY EXPRESS\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ТРАНСПОРТ И ЛОГИСТИКА\",\r\n      \"СИДОРОВА И. И.\",\r\n      \"Активная\",\r\n      \"07-27-2022\"\r\n    ),\r\n    createData(\r\n      \"4\",\r\n      \"Фиксация ИТ-инфраструктуры\",\r\n      \"PONY EXPRESS\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ТРАНСПОРТ И ЛОГИСТИКА\",\r\n      \"ИВАНОВА И. И.\",\r\n      \"Активная\",\r\n      \"11-26-2022\"\r\n    ),\r\n    createData(\r\n      \"5\",\r\n      \"Цaнтрализация ИТ-инфраструктуры\",\r\n      \"EXPRESS PONY\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ТРАНСПОРТ И ЛОГИСТИКА\",\r\n      \"ИВАНОВА И. И.\",\r\n      \"Активная\",\r\n      \"10-25-2022\"\r\n    ),\r\n    createData(\r\n      \"6\",\r\n      \"Цaнтрализация ФИТ-инфраструктуры\",\r\n      \"EXPRESS PONY\",\r\n      \"ЦЕНТРАЛИЗАЦИЯ\",\r\n      \"ЛОГИСТИКА\",\r\n      \"ИВАНОВА И. И.\",\r\n      \"Активная\",\r\n      \"10-25-2023\"\r\n    ),\r\n  ],\r\n  searchText: \"\",\r\n  searchOption: 0,\r\n};\r\n\r\nexport const projectsListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PROJECTSLIST_DATA\":\r\n      return { ...state, projectsList: action.payload };\r\n    case \"SET_SEARCHFIELD_TEXT\":\r\n      return { ...state, searchText: action.payload };\r\n    case \"SET_SEARCH_OPTION\":\r\n      return { ...state, searchOption: action.payload };\r\n    case \"REMOVE_PROJECT\":\r\n      return {\r\n        ...state,\r\n        projectsList: state.projectsList.filter(\r\n          (project) => project.id !== action.payload\r\n        ),\r\n      };\r\n    case \"MOVE_TO_ARCHIVE\":\r\n      return {\r\n        ...state,\r\n        projectsList: state.projectsList.map((project) => {\r\n          if (project.id === action.payload) {\r\n            project.cardStatus = \"В Архиве\";\r\n          }\r\n          return project;\r\n        }),\r\n      };\r\n    case \"MOVE_TO_ACTIVE\":\r\n      return {\r\n        ...state,\r\n        projectsList: state.projectsList.map((project) => {\r\n          if (project.id === action.payload) {\r\n            project.cardStatus = \"Активная\";\r\n          }\r\n          return project;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { projectsListReducer } from \"./projectsList/reducer\";\r\n\r\nexport const rooteReducer = combineReducers({\r\n  projectsList: projectsListReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { rooteReducer } from \"./reducers\";\r\n\r\nexport const STORE = createStore(rooteReducer, applyMiddleware(reduxThunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { STORE } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={STORE}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}